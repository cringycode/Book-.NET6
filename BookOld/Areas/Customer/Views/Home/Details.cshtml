@model ShoppingCart


<form method="post">
    <input hidden asp-for="ProductId"/>
    <div class="card  container pt-4">
        <div class="card-header bg-dark text-light ml-0  row ">
            <div class="col-12 col-md-6">
                <h1 class="text-white-50">@Model.Product.Title</h1>
                <p class="text-warning">by @Model.Product.Author</p>
            </div>
            <div class="col-12 col-md-6 text-end pt-4">
                <span class="badge bg-info pt-2" style="height:30px;">@Model.Product.CoverType.Name</span>
                <span class="badge bg-warning pt-2" style="height:30px;">@Model.Product.Category.Name</span>
            </div>
        </div>
        <div class="card-body row container">
            <div class="container rounded p-2">
                <div class="row">
                    <div class="col-8 col-lg-8">

                        <div class="row pl-2">
                            <h5 class="text-muted">ISBN : @Model.Product.ISBN</h5>
                        </div>

                        <div class="row text-center pt-5 pl-2">
                            <div class="p-1 col-2 bg-secondary border-bottom">
                                <div>Quantity</div>
                            </div>
                        </div>
                        <div class="row text-center pt-1 pl-2" style="color:maroon; font-weight:bold">
                            <div class="p-1 col-2 bg-secondary">
                                <div>Price</div>
                            </div>
                            <div class="p-1 col-2 bg-secondary">
                                <div>@Model.Product.Price.ToString("c")</div>
                            </div>
                        </div>

                        <div class="row pl-2">
                            <p class="text-secondary">@Html.Raw(Model.Product.Description)</p>
                        </div>

                        <div class="row pt-4 pl-2">
                            <div class="col-10">
                                <label asp-for="Count"></label>
                                <input asp-for="Count" class="form-control"/>
                            </div>
                        </div>
                    </div>

                    <div class="col-12 col-lg-3 offset-lg-1 text-center">
                        <img src="@Model.Product.ImageUrl" width="100%" class="rounded"/>
                    </div>

                    <div id="loginError" class="alert alert-danger d-none col-5 text-center" role="alert">
                        Please log in first to add the product to your cart.
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-12 col-md-6 pb-1">
                    <a class="btn btn-primary form-control " style="height:50px;" asp-action="Index">Back to Home</a>
                </div>
                <div class="col-12 col-md-6 pb-1">
                    <button type="submit" id="addToCartBtn" value="Add to Cart" class="btn btn-success form-control" style="height:50px;">Add to Cart</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts
{
    <script>
        // Check if the user is logged in when clicking the "Add to Cart" button
        document.getElementById('addToCartBtn').addEventListener('click', function (event) {
            // Perform the check here
            if (!isUserLoggedIn()) {
                event.preventDefault(); // Prevent the form submission
                displayLoginError();
            }
        });
    
        // Function to check if the user is logged in
        function isUserLoggedIn() {
            // Replace this condition with your logic to check if the user is logged in
            // For example, you can check if a specific element that is present only when the user is logged in exists.
            // Here, I'm assuming there's an element with the id 'loggedInUser'
            return document.getElementById('loggedInUser') !== null;
        }
    
        // Function to display the login error message
        function displayLoginError() {
            var loginError = document.getElementById('loginError');
            loginError.classList.remove('d-none'); // Show the error message
            setTimeout(function () {
                loginError.classList.add('d-none'); // Hide the error message after a delay (you can adjust the delay as needed)
            }, 5000); // Hide the error message after 5 seconds (5000 milliseconds)
        }
    </script>

}